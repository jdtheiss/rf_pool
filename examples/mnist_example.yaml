# set solver for training
Solver: Solver
# build 3-layer network
Model:
    ConvBlock:
        - in_channels: 1
          out_channels: 32
          kernel_size: 5
          padding: 0
          normalization: 
          activation: {ReLU: {}}
          pool: {MaxPool2d: 2}
        - in_channels: 32
          out_channels: 64
          kernel_size: 5
          padding: 0
          normalization: 
          activation: {ReLU: {}}
          pool: {MaxPool2d: 2}
        - in_channels: 64
          out_channels: 10
          kernel_size: 4
          padding: 0
          normalization: 
          activation: 
    Flatten: {}
    # insert attention at layer 1
    insert_modules:
        ConvBlock_0:
            Attention:
                in_channels: 32
                n_hidden: 10
                img_shape: [12, 12]
    # set parameters for training
    set_parameters:
        rbm_parameters: attention
        other_parameters: ConvBlock
# log rbm losses
LOG:
    fields: [spatial_rbm_loss, feature_rbm_loss]
    reduce: mean
# set cross entropy loss
Loss:
    CrossEntropyLoss: {}
# set accuracy metric
Metric:
    Accuracy: {}
# set Adam optimizer with separate parameters
Optimizer:
    Adam:
        params:
            - params: rbm_parameters
              lr: 1.0e-4
            - params: other_parameters
        lr: 1.0e-3
# set training dataloader for MNIST
Train:
    DataLoader:
        MNIST:
            root: datasets/
            train: True
            download: True
            transform: {ToTensor: {}}
        batch_size: 10
        num_workers: 4